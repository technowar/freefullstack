{"version":3,"sources":["components/Filter.js","components/Form.js","components/List.js","components/Notification.js","services/index.js","services/person.js","index.js"],"names":["Filter","filter","onChange","value","Form","name","number","onSubmit","type","List","persons","onClick","map","person","key","id","Notification","message","length","className","client","Axios","create","baseURL","process","responseType","headers","createPersons","payload","post","deletePersons","delete","App","useState","notification","notificationType","setState","fetchPersons","useCallback","a","get","data","status","Error","state","evt","target","window","confirm","preventDefault","foundPerson","findIndex","trim","put","filteredPersons","toLowerCase","includes","useEffect","timer","setTimeout","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afb5e155.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={onChange} />\n    </div>\n  );\n};\n","import React from 'react'\n\nexport default function Form({ name, number, onChange, onSubmit }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name} onChange={onChange('name')} />\n      </div>\n      <div>\n        number: <input value={number} onChange={onChange('number')} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react'\n\nexport default function List({ persons, onClick }) {\n  return persons.map(person => (\n    <div key={person.id}>\n      <span>{person.name} {person.number}</span>\n      <button onClick={() => onClick(person)}>Delete</button>\n    </div>\n  ));\n};\n","import React from 'react'\n\nexport default function Notification({ message, type }) {\n  return message.length ? (\n    <p className={type}>{message}</p>\n  ) : null;\n};\n","import Axios from 'axios'\n\nconst { REACT_APP_HOST } = process.env\nconst client = Axios.create({\n  baseURL: REACT_APP_HOST,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default client;\n","import client from './index'\n\nconst createPersons = payload => client.post('/api/persons', payload);\nconst deletePersons = id => client.delete(`/api/persons/${id}`);\nconst getPersons = () => client.get('/api/persons');\nconst updatePersons = (id, payload) => client.put(`/api/persons/${id}`, payload);\n\nexport { createPersons, deletePersons, getPersons, updatePersons };\n","import React, { useCallback, useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport List from './components/List'\nimport Notification from './components/Notification'\nimport { createPersons, deletePersons, getPersons, updatePersons } from './services/person'\nimport './index.css'\n\nconst App = () => {\n  const [{\n    filter,\n    name,\n    notification,\n    notificationType,\n    number,\n    persons,\n  }, setState] = useState({\n    filter: '',\n    name: '',\n    notification: '',\n    notificationType: 'notification success',\n    number: '',\n    persons: [],\n  });\n  const fetchPersons = useCallback(async () => {\n    try {\n      const { data, status } = await getPersons();\n\n      if (status >= 400) {\n        throw new Error('Something went wrong');\n      }\n\n      setState((state) => ({ ...state, persons: data }));\n    } catch (error) {\n      setState((state) => ({ ...state, notification: error.message, notificationType: 'notification error' }));\n    }\n  }, []);\n  const onChange = (type) => (evt) => {\n    const { value } = evt.target;\n\n    setState((state) => ({ ...state, [type]: value }));\n  };\n  const onClick = async ({ id, name }) => {\n    try {\n      const confirmDelete = window.confirm(`Delete ${name}?`);\n\n      if (confirmDelete) {\n        const { status } = await deletePersons(id);\n\n        if (status >= 400) {\n          throw new Error('Something went wrong');\n        }\n\n        setState((state) => ({\n          ...state,\n          name: '',\n          notification: `Deleted ${name}`,\n          notificationType: 'notification success',\n          number: '',\n          persons: persons.filter(person => person.id !== id),\n        }));\n      }\n    } catch (error) {\n      setState((state) => ({ ...state, notification: error.message, notificationType: 'notification error' }));\n    }\n  };\n  const onSubmit = async (evt) => {\n    try {\n      evt.preventDefault();\n\n      if (!name || !number) {\n        throw new Error('Input fields cannot be empty');\n      }\n\n      const foundPerson = persons.findIndex(person => person.name === name.trim());\n\n      if (foundPerson > -1) {\n        const confirmReplace = window.confirm(`${persons[foundPerson].name} is already added to phonebook, replace the old number with the new one?`);\n\n        if (confirmReplace) {\n          const { data, status } = await updatePersons(persons[foundPerson].id, { name, number });\n\n          if (status >= 400) {\n            throw new Error('Something went wrong');\n          }\n\n          persons[foundPerson] = data;\n\n          setState((state) => ({\n            ...state,\n            name: '',\n            notification: `Updated ${persons[foundPerson].name}'s number`,\n            notificationType: 'notification success',\n            number: '',\n            persons,\n          }));\n        }\n      } else {\n        const { data, status } = await createPersons({ name, number });\n\n        if (status >= 400) {\n          throw new Error('Something went wrong');\n        }\n\n        setState((state) => ({\n          ...state,\n          name: '',\n          notification: `Added ${name}`,\n          notificationType: 'notification success',\n          number: '',\n          persons: [...persons, { ...data }],\n        }));\n      }\n    } catch (error) {\n      setState((state) => ({ ...state, notification: error.message, notificationType: 'notification error' }));\n    }\n  };\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n  useEffect(() => {\n    fetchPersons();\n  }, [fetchPersons]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setState((state) => ({ ...state, notification: '', notificationType: 'notification success', })), 3000);\n\n    return () => clearTimeout(timer);\n  }, [notification]);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} type={notificationType} />\n      <Filter filter={filter} onChange={onChange('filter')} />\n      <h2>add a new</h2>\n      <Form\n        name={name}\n        number={number}\n        onChange={onChange}\n        onSubmit={onSubmit}\n      />\n      <h2>Numbers</h2>\n      <List persons={filteredPersons} onClick={onClick} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}